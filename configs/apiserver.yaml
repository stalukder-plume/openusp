# OpenUSP Configuration
# This is the main configuration file for OpenUSP microservices
# Environment variables can be used with ${VAR_NAME:default_value} syntax

service:
  name: "openusp-apiserver"
  version: "${SERVICE_VERSION:1.0.0}"
  environment: "${ENVIRONMENT:development}"
  debug: ${DEBUG:false}
  metadata:
    component: "apiserver"
    team: "openusp"

database:
  type: "mongodb"
  host: "${DB_HOST:localhost}"
  port: ${DB_PORT:27017}
  name: "${DB_NAME:usp}"
  username: "${DB_USER:admin}"
  password: "${DB_PASSWD:admin}"
  pool:
    maxConnections: ${DB_MAX_CONNECTIONS:10}
    timeout: "${DB_TIMEOUT:30s}"

messageBus:
  stomp:
    enabled: ${STOMP_ENABLED:true}
    host: "${STOMP_HOST:localhost}"
    port: ${STOMP_PORT:61613}
    tlsPort: ${STOMP_TLS_PORT:61614}
    mode: "${STOMP_MODE:nondtls}"
    username: "${STOMP_USER:}"
    password: "${STOMP_PASSWD:}"
    queue: "${STOMP_CNTLR_QUEUE:/queue/controller-notify-dest}"
    connRetry: ${STOMP_CONN_RETRY:5}
    enableTLS: ${STOMP_ENABLE_TLS:false}
    
  mqtt:
    enabled: ${MQTT_ENABLED:true}
    host: "${MQTT_HOST:localhost}"
    port: ${MQTT_PORT:1883}
    mode: "${MQTT_MODE:nontls}"
    username: "${MQTT_USER:}"
    password: "${MQTT_PASSWD:}"
    topic: "${MQTT_TOPIC:/usp/controller}"
    clientId: "${MQTT_CLIENT_ID:openusp-client}"
    enableTLS: ${MQTT_ENABLE_TLS:false}
    
  coap:
    enabled: ${COAP_ENABLED:true}
    host: "${COAP_HOST:localhost}"
    port: ${COAP_SERVER_PORT:5683}
    dtlsPort: ${COAP_SERVER_DTLS_PORT:5684}
    mode: "${COAP_SERVER_MODE:nondtls}"

protocols:
  http:
    enabled: ${HTTP_ENABLED:true}
    host: "${HTTP_HOST:0.0.0.0}"
    port: ${HTTP_PORT:8081}
    tlsPort: ${HTTP_TLS_PORT:8443}
    enableTLS: ${HTTP_TLS:false}
    certFile: "${HTTP_CERT_FILE:}"
    keyFile: "${HTTP_KEY_FILE:}"
    
  grpc:
    enabled: ${GRPC_ENABLED:true}
    host: "${GRPC_HOST:0.0.0.0}"
    port: ${CNTLR_GRPC_PORT:9001}
    enableTLS: ${GRPC_ENABLE_TLS:false}
    certFile: "${GRPC_CERT_FILE:}"
    keyFile: "${GRPC_KEY_FILE:}"
    
  websocket:
    enabled: ${WS_ENABLED:true}
    host: "${WS_HOST:0.0.0.0}"
    port: ${WS_SERVER_PORT:8080}
    tlsPort: ${WS_SERVER_TLS_PORT:8443}
    path: "${WS_PATH:/usp}"
    mode: "${WS_MODE:nontls}"
    enableTLS: ${WS_ENABLE_TLS:false}
    
  cwmp:
    enabled: ${CWMP_ACS_ENABLE:false}
    host: "${CWMP_HOST:0.0.0.0}"
    port: ${CWMP_ACS_PORT:7547}
    tlsPort: ${CWMP_ACS_TLS_PORT:7548}
    url: "${CWMP_ACS_URL:http://localhost:7547/cwmp}"
    username: "${CWMP_ACS_USERNAME:admin}"
    password: "${CWMP_ACS_PASSWORD:admin}"

security:
  auth:
    type: "basic"
    username: "${API_SERVER_AUTH_NAME:cli}"
    password: "${API_SERVER_AUTH_PASSWD:admin}"
    
  tls:
    enabled: ${TLS_ENABLED:false}
    certFile: "${TLS_CERT_FILE:}"
    keyFile: "${TLS_KEY_FILE:}"
    caCertFile: "${TLS_CA_CERT_FILE:}"
    
  usp:
    controllerEndpointId: "${CNTLR_EPID:self::openusp-controller}"
    protocolVersion: "${CNTLR_USP_PROTO_VERSION:1.2}"
    versionCheck: ${CNTLR_USP_PROTO_VERSION_CHECK:false}
    agentId: "${AGENT_ID:os::012345-000000000000}"
    
  cache:
    type: "redis"
    host: "${CACHE_HOST:localhost}"
    port: ${CACHE_PORT:6379}
    password: "${CACHE_PASSWORD:}"
    database: ${CACHE_DATABASE:0}

logging:
  level: "${LOG_LEVEL:info}"
  format: "${LOG_FORMAT:json}"
  output: "${LOG_OUTPUT:stdout}"
  file: "${LOG_FILE:}"
  maxSize: ${LOG_MAX_SIZE:100}
  maxBackups: ${LOG_MAX_BACKUPS:3}
  maxAge: ${LOG_MAX_AGE:30}
  compress: ${LOG_COMPRESS:true}